extends ../layout

block content
  .row
    .col.s12
      h4.title=project.title
      p=project.description

  if dataset
    .row
      .col.s12
        ul.tabs
          li.tab
            a(class=(currentTask ? "" : "active") href=`/projects/${project.id}`) 원본데이터
          each task in project.tasks
            li.tab
              a(class=(currentTask && currentTask.id == task.id ? "active": "") href=`/projects/${project.id}/tasks/${task.id}`)=`${task.getTaskMsg()}(${task.getStatusMsg()})`

      #tab-preview.col.s12.table-responsive
        table.preview-table
          thead
            tr
              each meta, index in dataset.metas
                th.min.col-header(data-col=meta.name)
                  a.filter-btn(href='#' data-col=meta.name data-idx=index)
                    span.material-icons sort
    
                  | #{meta.name}
                  br
                  small
                    | #{meta.colType}
            tr
              each meta in dataset.metas
                th.num-chart-wrap
                  .num-chart(id="profile-" + meta.name)
          tbody#rows
        #rows-pagination
  else

  include _option_btns
  include _task_modal
  include _profile_modal

block scripts
  script(src='https://cdn.jsdelivr.net/npm/handlebars@latest/dist/handlebars.js')
  script(src='/javascripts/app/handlebars-helper.js')
  script(src='https://cdn.amcharts.com/lib/4/core.js')
  script(src='https://cdn.amcharts.com/lib/4/charts.js')
  script(src='https://cdn.amcharts.com/lib/4/themes/animated.js')
  
  script.
    am4core.addLicense("CH204832145");
  script
    | var datasestId = #{dataset.id};
    include scripts/dataset.js
  script.
    var projectId = #{project.id};
    $(document).ready(function(){
      $('.fixed-action-btn').floatingActionButton();
      $('.tooltipped').tooltip();
      $('.modal').modal();

      $( "#qufa-tasks-box" ).sortable({
        revert: true
      });

      $( "#qufa-tasks > li" ).draggable({
        connectToSortable: "#qufa-tasks-box",
        helper: "clone",
        revert: "invalid"
      });
      $( "ul, li" ).disableSelection();

      $(document).on("click", ".save-task", function(e) {
        e.preventDefault();

        var tasks = $( "#qufa-tasks-box" ).sortable( "toArray", { attribute: "data-task" } );
        $.ajax({
          url: "/projects/" + projectId + "/tasks",
          type: "post",
          contentType: "application/json",
          data: JSON.stringify(tasks),
          success: function(d) {
            if (d && d.length) {
              alert("태스크 등록이 완료되었습니다. 각각의 태스크는 단계별로 진행됩니다.")
              location.reload();
            }
          }
        })
        console.log(tasks);
      })
    });
    